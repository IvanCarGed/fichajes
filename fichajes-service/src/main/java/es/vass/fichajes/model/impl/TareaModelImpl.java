/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package es.vass.fichajes.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import es.vass.fichajes.model.Tarea;
import es.vass.fichajes.model.TareaModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Tarea service. Represents a row in the &quot;Fichajes_Tarea&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link TareaModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TareaImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see TareaImpl
 * @see Tarea
 * @see TareaModel
 * @generated
 */
@ProviderType
public class TareaModelImpl extends BaseModelImpl<Tarea> implements TareaModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a tarea model instance should use the {@link Tarea} interface instead.
	 */
	public static final String TABLE_NAME = "Fichajes_Tarea";
	public static final Object[][] TABLE_COLUMNS = {
			{ "tareaId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "horaInicio", Types.TIMESTAMP },
			{ "horaFin", Types.TIMESTAMP },
			{ "activa", Types.BOOLEAN },
			{ "latitud", Types.DOUBLE },
			{ "longitud", Types.DOUBLE },
			{ "tipoTarea", Types.BIGINT }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("tareaId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("horaInicio", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("horaFin", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("activa", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("latitud", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("longitud", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("tipoTarea", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE = "create table Fichajes_Tarea (tareaId LONG not null primary key,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,horaInicio DATE null,horaFin DATE null,activa BOOLEAN,latitud DOUBLE,longitud DOUBLE,tipoTarea LONG)";
	public static final String TABLE_SQL_DROP = "drop table Fichajes_Tarea";
	public static final String ORDER_BY_JPQL = " ORDER BY tarea.tareaId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY Fichajes_Tarea.tareaId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(es.vass.fichajes.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.es.vass.fichajes.model.Tarea"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(es.vass.fichajes.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.es.vass.fichajes.model.Tarea"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(es.vass.fichajes.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.es.vass.fichajes.model.Tarea"),
			true);
	public static final long CREATEDATE_COLUMN_BITMASK = 1L;
	public static final long USERID_COLUMN_BITMASK = 2L;
	public static final long USERNAME_COLUMN_BITMASK = 4L;
	public static final long TAREAID_COLUMN_BITMASK = 8L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(es.vass.fichajes.service.util.ServiceProps.get(
				"lock.expiration.time.es.vass.fichajes.model.Tarea"));

	public TareaModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _tareaId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setTareaId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _tareaId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Tarea.class;
	}

	@Override
	public String getModelClassName() {
		return Tarea.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("tareaId", getTareaId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("horaInicio", getHoraInicio());
		attributes.put("horaFin", getHoraFin());
		attributes.put("activa", isActiva());
		attributes.put("latitud", getLatitud());
		attributes.put("longitud", getLongitud());
		attributes.put("tipoTarea", getTipoTarea());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long tareaId = (Long)attributes.get("tareaId");

		if (tareaId != null) {
			setTareaId(tareaId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Date horaInicio = (Date)attributes.get("horaInicio");

		if (horaInicio != null) {
			setHoraInicio(horaInicio);
		}

		Date horaFin = (Date)attributes.get("horaFin");

		if (horaFin != null) {
			setHoraFin(horaFin);
		}

		Boolean activa = (Boolean)attributes.get("activa");

		if (activa != null) {
			setActiva(activa);
		}

		Double latitud = (Double)attributes.get("latitud");

		if (latitud != null) {
			setLatitud(latitud);
		}

		Double longitud = (Double)attributes.get("longitud");

		if (longitud != null) {
			setLongitud(longitud);
		}

		Long tipoTarea = (Long)attributes.get("tipoTarea");

		if (tipoTarea != null) {
			setTipoTarea(tipoTarea);
		}
	}

	@Override
	public long getTareaId() {
		return _tareaId;
	}

	@Override
	public void setTareaId(long tareaId) {
		_tareaId = tareaId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_columnBitmask |= USERNAME_COLUMN_BITMASK;

		if (_originalUserName == null) {
			_originalUserName = _userName;
		}

		_userName = userName;
	}

	public String getOriginalUserName() {
		return GetterUtil.getString(_originalUserName);
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_columnBitmask |= CREATEDATE_COLUMN_BITMASK;

		if (_originalCreateDate == null) {
			_originalCreateDate = _createDate;
		}

		_createDate = createDate;
	}

	public Date getOriginalCreateDate() {
		return _originalCreateDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@Override
	public Date getHoraInicio() {
		return _horaInicio;
	}

	@Override
	public void setHoraInicio(Date horaInicio) {
		_horaInicio = horaInicio;
	}

	@Override
	public Date getHoraFin() {
		return _horaFin;
	}

	@Override
	public void setHoraFin(Date horaFin) {
		_horaFin = horaFin;
	}

	@Override
	public boolean getActiva() {
		return _activa;
	}

	@Override
	public boolean isActiva() {
		return _activa;
	}

	@Override
	public void setActiva(boolean activa) {
		_activa = activa;
	}

	@Override
	public double getLatitud() {
		return _latitud;
	}

	@Override
	public void setLatitud(double latitud) {
		_latitud = latitud;
	}

	@Override
	public double getLongitud() {
		return _longitud;
	}

	@Override
	public void setLongitud(double longitud) {
		_longitud = longitud;
	}

	@Override
	public long getTipoTarea() {
		return _tipoTarea;
	}

	@Override
	public void setTipoTarea(long tipoTarea) {
		_tipoTarea = tipoTarea;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			Tarea.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Tarea toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Tarea)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		TareaImpl tareaImpl = new TareaImpl();

		tareaImpl.setTareaId(getTareaId());
		tareaImpl.setUserId(getUserId());
		tareaImpl.setUserName(getUserName());
		tareaImpl.setCreateDate(getCreateDate());
		tareaImpl.setModifiedDate(getModifiedDate());
		tareaImpl.setHoraInicio(getHoraInicio());
		tareaImpl.setHoraFin(getHoraFin());
		tareaImpl.setActiva(isActiva());
		tareaImpl.setLatitud(getLatitud());
		tareaImpl.setLongitud(getLongitud());
		tareaImpl.setTipoTarea(getTipoTarea());

		tareaImpl.resetOriginalValues();

		return tareaImpl;
	}

	@Override
	public int compareTo(Tarea tarea) {
		long primaryKey = tarea.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Tarea)) {
			return false;
		}

		Tarea tarea = (Tarea)obj;

		long primaryKey = tarea.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		TareaModelImpl tareaModelImpl = this;

		tareaModelImpl._originalUserId = tareaModelImpl._userId;

		tareaModelImpl._setOriginalUserId = false;

		tareaModelImpl._originalUserName = tareaModelImpl._userName;

		tareaModelImpl._originalCreateDate = tareaModelImpl._createDate;

		tareaModelImpl._setModifiedDate = false;

		tareaModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Tarea> toCacheModel() {
		TareaCacheModel tareaCacheModel = new TareaCacheModel();

		tareaCacheModel.tareaId = getTareaId();

		tareaCacheModel.userId = getUserId();

		tareaCacheModel.userName = getUserName();

		String userName = tareaCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			tareaCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			tareaCacheModel.createDate = createDate.getTime();
		}
		else {
			tareaCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			tareaCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			tareaCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		Date horaInicio = getHoraInicio();

		if (horaInicio != null) {
			tareaCacheModel.horaInicio = horaInicio.getTime();
		}
		else {
			tareaCacheModel.horaInicio = Long.MIN_VALUE;
		}

		Date horaFin = getHoraFin();

		if (horaFin != null) {
			tareaCacheModel.horaFin = horaFin.getTime();
		}
		else {
			tareaCacheModel.horaFin = Long.MIN_VALUE;
		}

		tareaCacheModel.activa = isActiva();

		tareaCacheModel.latitud = getLatitud();

		tareaCacheModel.longitud = getLongitud();

		tareaCacheModel.tipoTarea = getTipoTarea();

		return tareaCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(23);

		sb.append("{tareaId=");
		sb.append(getTareaId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", horaInicio=");
		sb.append(getHoraInicio());
		sb.append(", horaFin=");
		sb.append(getHoraFin());
		sb.append(", activa=");
		sb.append(isActiva());
		sb.append(", latitud=");
		sb.append(getLatitud());
		sb.append(", longitud=");
		sb.append(getLongitud());
		sb.append(", tipoTarea=");
		sb.append(getTipoTarea());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(37);

		sb.append("<model><model-name>");
		sb.append("es.vass.fichajes.model.Tarea");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>tareaId</column-name><column-value><![CDATA[");
		sb.append(getTareaId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>horaInicio</column-name><column-value><![CDATA[");
		sb.append(getHoraInicio());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>horaFin</column-name><column-value><![CDATA[");
		sb.append(getHoraFin());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>activa</column-name><column-value><![CDATA[");
		sb.append(isActiva());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>latitud</column-name><column-value><![CDATA[");
		sb.append(getLatitud());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>longitud</column-name><column-value><![CDATA[");
		sb.append(getLongitud());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tipoTarea</column-name><column-value><![CDATA[");
		sb.append(getTipoTarea());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = Tarea.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			Tarea.class, ModelWrapper.class
		};
	private long _tareaId;
	private long _userId;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private String _userName;
	private String _originalUserName;
	private Date _createDate;
	private Date _originalCreateDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private Date _horaInicio;
	private Date _horaFin;
	private boolean _activa;
	private double _latitud;
	private double _longitud;
	private long _tipoTarea;
	private long _columnBitmask;
	private Tarea _escapedModel;
}